"[{'inputs': ['""cccbbbaa""'], 'output': '""cba""'}, {'inputs': ['""aaabbab""'], 'output': '""abab""'}]"	['[a1] -> [a1]', 'a1 -> a1', '[Char] -> [Char]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '(Ord a1) => a1 -> a1', '(Eq a1) => a1 -> a1', '[a1] -> [Char]', '(Ord a1) => [a1] -> [Char]', '(Eq a1) => [a1] -> [Char]']
[{'inputs': ['[0]'], 'output': '[]'}]	['[a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '(Num a1) => [a1] -> [a1]', '(Ord a1) => [a1] -> [a1]', '(Eq a1, Num a1) => [a1] -> [a1]', '(Num a1, Ord a1) => [a1] -> [a1]']
"[{'inputs': ['""aaabbab""'], 'output': '""abab""'}, {'inputs': ['[0]'], 'output': '[]'}]"	['[t0] -> [Char]', '[t0] -> [t0]', '[t0] -> t0', '(Eq t0) => [t0] -> [Char]', '(Eq t0) => [t0] -> [t0]', '(Eq t0) => [t0] -> t0', '(Ord t0) => [t0] -> [Char]', '(Ord t0) => [t0] -> [t0]', '(Ord t0) => [t0] -> t0']
[{'inputs': ['[]'], 'output': '[]'}, {'inputs': ['[0]'], 'output': '[0]'}, {'inputs': ['[1]'], 'output': '[1]'}]	['[a1] -> [a1]', '[Int] -> [Int]', '(Num a1) => [a1] -> [a1]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '[a1] -> [Int]', '(Num a1, Ord a1) => [a1] -> [a1]', '(Eq a1, Num a1) => [a1] -> [a1]', '(Num a1) => [a1] -> [Int]', '(Ord a1) => [a1] -> [Int]']
[{'inputs': ['[]'], 'output': '[]'}, {'inputs': ['[0]'], 'output': '[0]'}, {'inputs': ['[1]'], 'output': '[1]'}, {'inputs': ['[-1]'], 'output': '[-1]'}, {'inputs': ['[2]'], 'output': '[2]'}]	['[a1] -> [a1]', '[Int] -> [Int]', '(Num a1) => [a1] -> [a1]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '[a1] -> [Int]', '(Num a1, Ord a1) => [a1] -> [a1]', '(Eq a1, Num a1) => [a1] -> [a1]', '(Num a1) => [a1] -> [Int]', '(Ord a1) => [a1] -> [Int]']
[{'inputs': ['[(\\x -> x + 2), (\\x -> x * 2)]', '5'], 'output': '[7, 10]'}, {'inputs': ['[]', '0'], 'output': '[]'}]	['[a1 -> a1] -> a1 -> [a1]', '[Int -> Int] -> Int -> [Int]', '(Num a1) => [a1 -> a1] -> a1 -> [a1]', '(Ord a1) => [a1 -> a1] -> a1 -> [a1]', '(Eq a1) => [a1 -> a1] -> a1 -> [a1]', '[a1 -> a1] -> a2 -> [a2]', '[a1 -> a2] -> a1 -> [a1]', '[a1 -> a2] -> a1 -> [a2]', '[a1 -> a2] -> a2 -> [a2]', '[Int -> Int] -> a1 -> [a1]']
"[{'inputs': ['2', '""1""'], 'output': '""11""'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
"[{'inputs': ['4', '""abc""'], 'output': '""abcabcabcabc""'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
[{'inputs': ['[]'], 'output': '[]'}]	Cannot find type for your query
"[{'inputs': ['1', '""abc""'], 'output': '""abc""'}, {'inputs': ['4', '""A""'], 'output': '""""'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
"[{'inputs': ['1', '""abc""'], 'output': '""abc""'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
[{'inputs': ['1', '2', '3'], 'output': '5'}]	['a1 -> a1 -> a1 -> a1', 'Int -> Int -> Int -> Int', '(Num a1) => a1 -> a1 -> a1 -> a1', '(Ord a1) => a1 -> a1 -> a1 -> a1', '(Eq a1) => a1 -> a1 -> a1 -> a1', 'Int -> Int -> a1 -> a1', 'Int -> a1 -> a1 -> a1', '(Num a1, Ord a1) => a1 -> a1 -> a1 -> a1', '(Eq a1, Num a1) => a1 -> a1 -> a1 -> a1', '(Ord a2) => a1 -> a1 -> a2 -> a1']
"[{'inputs': ['\\x -> x * 2', '3', '1'], 'output': '8'}, {'inputs': ['\\x -> x ++ x', '3', '""f-""'], 'output': '""f-f-f-f-f-f-f-f-""'}]"	['(t0 -> t0) -> Int -> t0 -> t0', '(t0 -> t0) -> t0 -> t0 -> t0', '(Ord a1) => (t0 -> t0) -> a1 -> t0 -> t0', '(Eq a1) => (t0 -> t0) -> a1 -> t0 -> t0', '(Num a1, Ord a1) => (t0 -> t0) -> a1 -> t0 -> t0', '(Eq a1, Num a1) => (t0 -> t0) -> a1 -> t0 -> t0']
[{'inputs': ['2', '[1,2,3]'], 'output': '[1,2,3,1,2,3]'}]	['a1 -> [a1] -> [a1]', 'Int -> [Int] -> [Int]', '(Num a1) => a1 -> [a1] -> [a1]', '(Ord a1) => a1 -> [a1] -> [a1]', '(Eq a1) => a1 -> [a1] -> [a1]', 'a1 -> [a2] -> [a1]', 'Int -> [a1] -> [Int]', 'Int -> [a1] -> [a1]', 'a1 -> [Int] -> [a1]', '(Num a1, Ord a1) => a1 -> [a1] -> [a1]']
"[{'inputs': ['2', 'â€œabc""'], 'output': '""abcabc""'}]"	"lexical error at character 'a'

"
"[{'inputs': [' (\\x -> x ++ x)', '3', '""f-""'], 'output': '""f-f-f-f-f-f-f-f-""'}]"	['([a1] -> [a1]) -> a1 -> [b1] -> [b1]', '([a1] -> [a1]) -> a1 -> b1 -> b1', '([a1] -> [a1]) -> Int -> [a1] -> [a1]', '([a1] -> [a1]) -> Int -> a1 -> a1', '([a1] -> [a1]) -> a1 -> [a1] -> [a1]', '([a1] -> [a1]) -> a1 -> a1 -> a1', '([a1] -> [a1]) -> a1 -> [Char] -> [Char]', '(Ord b1) => ([a1] -> [a1]) -> a1 -> [b1] -> [b1]', '(Eq b1) => ([a1] -> [a1]) -> a1 -> [b1] -> [b1]', '(Ord b1) => ([a1] -> [a1]) -> a1 -> b1 -> b1']
[{'inputs': ['0', '[Nothing, Just 3]'], 'output': '3'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
[{'inputs': ['0', '[Nothing, Just 3]'], 'output': '3'}, {'inputs': ['0', '[Nothing]'], 'output': '0'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
[{'inputs': ['0', '[Just 1, Just 2]'], 'output': '1'}, {'inputs': ['0', '[Nothing, Just 3]'], 'output': '3'}, {'inputs': ['0', '[Nothing]'], 'output': '0'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
[{'inputs': ['bottom', '[]'], 'output': 'bottom'}, {'inputs': ['0', '[Just 1, Just 2]'], 'output': '1'}, {'inputs': ['0', '[Nothing, Just 3]'], 'output': '3'}, {'inputs': ['0', '[Nothing]'], 'output': '0'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
[{'inputs': ['[Just 3, Nothing, Just 4]', '5'], 'output': '3'}, {'inputs': ['[Nothing, Nothing]', '2'], 'output': '2'}, {'inputs': ['[Nothing, Just 2, Just 3]', '4'], 'output': '2'}]	['[Maybe a1] -> a1 -> a1', '[Maybe Int] -> Int -> Int', '(Num a1) => [Maybe a1] -> a1 -> a1', '(Ord a1) => [Maybe a1] -> a1 -> a1', '(Eq a1) => [Maybe a1] -> a1 -> a1', '[Maybe a1] -> a2 -> a2', '[Maybe Int] -> a1 -> a1', '[Maybe a1] -> Int -> Int', '[Maybe a1] -> Int -> a1', '(Num a1, Ord a1) => [Maybe a1] -> a1 -> a1']
[{'inputs': ['[]', '3'], 'output': '3'}, {'inputs': ['[Just 3, Nothing, Just 4]', '5'], 'output': '3'}, {'inputs': ['[Nothing, Nothing]', '2'], 'output': '2'}, {'inputs': ['[Nothing, Just 2, Just 3]', '4'], 'output': '2'}]	['[Maybe a1] -> a1 -> a1', '[Maybe Int] -> Int -> Int', '(Num a1) => [Maybe a1] -> a1 -> a1', '(Ord a1) => [Maybe a1] -> a1 -> a1', '(Eq a1) => [Maybe a1] -> a1 -> a1', '[Maybe a1] -> a2 -> a2', '[Maybe Int] -> a1 -> a1', '[Maybe a1] -> Int -> Int', '[Maybe a1] -> Int -> a1', '(Num a1, Ord a1) => [Maybe a1] -> a1 -> a1']
[{'inputs': ['[Nothing, Nothing]', '2'], 'output': '2'}, {'inputs': ['[Nothing, Just 2, Just 3]', '4'], 'output': '2'}]	['[Maybe a1] -> a1 -> a1', '[Maybe Int] -> Int -> Int', '(Num a1) => [Maybe a1] -> a1 -> a1', '(Ord a1) => [Maybe a1] -> a1 -> a1', '(Eq a1) => [Maybe a1] -> a1 -> a1', '[Maybe a1] -> a2 -> a2', '[Maybe Int] -> a1 -> a1', '[Maybe a1] -> Int -> Int', '[Maybe a1] -> Int -> a1', '(Num a1, Ord a1) => [Maybe a1] -> a1 -> a1']
"[{'inputs': ['(\\x -> x ++ x)', '3'], 'output': '""f-""'}]"	['([a1] -> [a1]) -> a1 -> [a1]', '([a1] -> [a1]) -> a1 -> a1', '([a1] -> [a1]) -> a1 -> [Char]', '(Eq a1) => ([a1] -> [a1]) -> Int -> [a1]', '(Ord a1) => ([a1] -> [a1]) -> Int -> [a1]', '(Eq a1) => ([a1] -> [a1]) -> Int -> a1', '(Ord a1) => ([a1] -> [a1]) -> Int -> a1', '(Ord a1) => ([a1] -> [a1]) -> a1 -> [a1]', '(Eq a1) => ([a1] -> [a1]) -> a1 -> [a1]', '(Ord a1) => ([a1] -> [a1]) -> a1 -> a1']
[{'inputs': ['2', '[1,2,3]'], 'output': '[1,2,3,1,2,3]'}, {'inputs': ['0', '[]'], 'output': '[]'}]	['a1 -> [a1] -> [a1]', 'Int -> [Int] -> [Int]', '(Num a1) => a1 -> [a1] -> [a1]', '(Ord a1) => a1 -> [a1] -> [a1]', '(Eq a1) => a1 -> [a1] -> [a1]', 'a1 -> [a2] -> [a1]', 'Int -> [a1] -> [Int]', 'Int -> [a1] -> [a1]', 'a1 -> [Int] -> [a1]', '(Num a1, Ord a1) => a1 -> [a1] -> [a1]']
[{'inputs': ['[Nothing, Nothing, Just 7, Nothing]', '5'], 'output': '7'}]	['[Maybe a1] -> a1 -> a1', '[Maybe Int] -> Int -> Int', '(Num a1) => [Maybe a1] -> a1 -> a1', '(Ord a1) => [Maybe a1] -> a1 -> a1', '(Eq a1) => [Maybe a1] -> a1 -> a1', '[Maybe a1] -> a2 -> a2', '[Maybe Int] -> a1 -> a1', '[Maybe a1] -> Int -> Int', '[Maybe a1] -> Int -> a1', '(Num a1, Ord a1) => [Maybe a1] -> a1 -> a1']
[{'inputs': ['[]', '3'], 'output': '3'}, {'inputs': ['[Nothing]', '5'], 'output': '5'}, {'inputs': ['[Nothing, Nothing, Just 7, Nothing]', '5'], 'output': '7'}]	['[Maybe a1] -> a1 -> a1', '[Maybe Int] -> Int -> Int', '(Num a1) => [Maybe a1] -> a1 -> a1', '(Ord a1) => [Maybe a1] -> a1 -> a1', '(Eq a1) => [Maybe a1] -> a1 -> a1', '[Maybe a1] -> a2 -> a2', '[Maybe Int] -> a1 -> a1', '[Maybe a1] -> Int -> Int', '[Maybe a1] -> Int -> a1', '(Num a1, Ord a1) => [Maybe a1] -> a1 -> a1']
[{'inputs': ['(7:)', '3', '[]'], 'output': '[7,7,7]'}]	['([a1] -> [a1]) -> a1 -> [a1] -> [a1]', '(Num a1) => ([a1] -> [a1]) -> a1 -> [a1] -> [a1]', '(Ord a1) => ([a1] -> [a1]) -> a1 -> [a1] -> [a1]', '(Eq a1) => ([a1] -> [a1]) -> a1 -> [a1] -> [a1]', '([a1] -> [a1]) -> a1 -> [a2] -> [a2]', '([a1] -> [a1]) -> a2 -> [a1] -> [a2]', '([a1] -> [a2]) -> a1 -> [a1] -> [a1]', '([a1] -> [a2]) -> a1 -> [a2] -> [a2]', '([a1] -> [a2]) -> a1 -> [a2] -> [a1]', '([a1] -> [a2]) -> a1 -> [a1] -> [a2]']
[{'inputs': ['10', '[Nothing]'], 'output': '10'}, {'inputs': ['0', '[Nothing, Just 1]'], 'output': '1'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
[{'inputs': ['5', 'Nothing, Just 1, Nothing]'], 'output': '1'}, {'inputs': ['10', '[Nothing]'], 'output': '10'}, {'inputs': ['0', '[Nothing, Just 1]'], 'output': '1'}]	"parse error on input Ã¢Â€Â˜]Ã¢Â€Â™

"
[{'inputs': ['5', '[Nothing, Just 1, Nothing]'], 'output': '1'}, {'inputs': ['10', '[Nothing]'], 'output': '10'}, {'inputs': ['0', '[Nothing, Just 1]'], 'output': '1'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
[{'inputs': ['4', '[Nothing, Just1, Just2]'], 'output': '1'}, {'inputs': ['5', '[Nothing, Just 1, Nothing]'], 'output': '1'}, {'inputs': ['10', '[Nothing]'], 'output': '10'}, {'inputs': ['0', '[Nothing, Just 1]'], 'output': '1'}]	"Data constructor not in scope: Just1 :: Maybe a1
Data constructor not in scope: Just2 :: Maybe a1

"
[{'inputs': ['4', '[Nothing, Just 1, Just 2]'], 'output': '1'}, {'inputs': ['5', '[Nothing, Just 1, Nothing]'], 'output': '1'}, {'inputs': ['10', '[Nothing]'], 'output': '10'}, {'inputs': ['0', '[Nothing, Just 1]'], 'output': '1'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
[{'inputs': ['[Nothing, Just 11]', '10'], 'output': '11'}, {'inputs': ['[Nothing]', '10'], 'output': '10'}]	['[Maybe a1] -> a1 -> a1', '[Maybe Int] -> Int -> Int', '(Num a1) => [Maybe a1] -> a1 -> a1', '(Ord a1) => [Maybe a1] -> a1 -> a1', '(Eq a1) => [Maybe a1] -> a1 -> a1', '[Maybe a1] -> a2 -> a2', '[Maybe Int] -> a1 -> a1', '[Maybe a1] -> Int -> Int', '[Maybe a1] -> Int -> a1', '(Num a1, Ord a1) => [Maybe a1] -> a1 -> a1']
[{'inputs': ['[Nothing, Just 11, Nothing]', '10'], 'output': '11'}, {'inputs': ['[Nothing, Just 11]', '10'], 'output': '11'}, {'inputs': ['[Nothing]', '10'], 'output': '10'}]	['[Maybe a1] -> a1 -> a1', '[Maybe Int] -> Int -> Int', '(Num a1) => [Maybe a1] -> a1 -> a1', '(Ord a1) => [Maybe a1] -> a1 -> a1', '(Eq a1) => [Maybe a1] -> a1 -> a1', '[Maybe a1] -> a2 -> a2', '[Maybe Int] -> a1 -> a1', '[Maybe a1] -> Int -> Int', '[Maybe a1] -> Int -> a1', '(Num a1, Ord a1) => [Maybe a1] -> a1 -> a1']
"[{'inputs': ['0', '[0]', '1'], 'output': '[]'}, {'inputs': ['2', '[0,0]', ""'a'""], 'output': '[0,0,0,0]'}]"	['(Eq t0) => a1 -> [a1] -> t0 -> [a1]', '(Ord t0) => a1 -> [a1] -> t0 -> [a1]', '(Eq t0) => Int -> [Int] -> t0 -> [Int]', '(Ord t0) => Int -> [Int] -> t0 -> [Int]', '(Num a1, Eq t0) => a1 -> [a1] -> t0 -> [a1]', '(Num a1, Ord t0) => a1 -> [a1] -> t0 -> [a1]', '(Ord a1, Eq t0) => a1 -> [a1] -> t0 -> [a1]', '(Ord a1, Ord t0) => a1 -> [a1] -> t0 -> [a1]', '(Eq a1, Eq t0) => a1 -> [a1] -> t0 -> [a1]', '(Eq a1, Ord t0) => a1 -> [a1] -> t0 -> [a1]']
[{'inputs': ['0', '[0]'], 'output': '[]'}, {'inputs': ['2', '[0,0]'], 'output': '[0,0,0,0]'}]	['a1 -> [a1] -> [a1]', 'Int -> [Int] -> [Int]', '(Num a1) => a1 -> [a1] -> [a1]', '(Ord a1) => a1 -> [a1] -> [a1]', '(Eq a1) => a1 -> [a1] -> [a1]', 'a1 -> [a2] -> [a1]', 'Int -> [a1] -> [Int]', 'Int -> [a1] -> [a1]', 'a1 -> [Int] -> [a1]', '(Num a1, Ord a1) => a1 -> [a1] -> [a1]']
"[{'inputs': ['0', '[0]'], 'output': '[]'}, {'inputs': ['2', ""'a'""], 'output': '[0,0,0,0]'}]"	['(Eq t0) => a1 -> t0 -> [a1]', '(Ord t0) => a1 -> t0 -> [a1]', '(Eq t0) => Int -> t0 -> [Int]', '(Ord t0) => Int -> t0 -> [Int]', '(Num a1, Eq t0) => a1 -> t0 -> [a1]', '(Num a1, Ord t0) => a1 -> t0 -> [a1]', '(Ord a1, Eq t0) => a1 -> t0 -> [a1]', '(Ord a1, Ord t0) => a1 -> t0 -> [a1]', '(Eq a1, Eq t0) => a1 -> t0 -> [a1]', '(Eq a1, Ord t0) => a1 -> t0 -> [a1]']
[{'inputs': ['6', '[1,2,3,4]'], 'output': '[]'}]	['a1 -> [a1] -> [a1]', '(Num a1) => a1 -> [a1] -> [a1]', '(Ord a1) => a1 -> [a1] -> [a1]', '(Eq a1) => a1 -> [a1] -> [a1]', 'a1 -> [a2] -> [a1]', 'Int -> [a1] -> [a1]', 'a1 -> [Int] -> [a1]', '(Num a1, Ord a1) => a1 -> [a1] -> [a1]', '(Eq a1, Num a1) => a1 -> [a1] -> [a1]', '(Num a2) => a1 -> [a2] -> [a1]']
"[{'inputs': ['""ccccccc""'], 'output': '""c""'}, {'inputs': ['""ababaab""'], 'output': '""abab""'}, {'inputs': ['""aabbab""'], 'output': '""abab""'}]"	['[a1] -> [a1]', 'a1 -> a1', '[Char] -> [Char]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '(Ord a1) => a1 -> a1', '(Eq a1) => a1 -> a1', '[a1] -> [Char]', '(Ord a1) => [a1] -> [Char]', '(Eq a1) => [a1] -> [Char]']
[{'inputs': ['[(\\x -> x+2), (\\x->x*2)]', '5'], 'output': '[7,10]'}, {'inputs': ['[]', '0'], 'output': '[]'}, {'inputs': ['[\\x -> x + 1]', '1'], 'output': '[2]'}, {'inputs': ['[\\x -> x + 1,\\x -> x + 1]', '2'], 'output': '[3, 3]'}, {'inputs': ['[\\x -> x * x]', '-2'], 'output': '[4]'}, {'inputs': ['[\\x -> x + 1,\\x -> x + 1,\\x -> x + 1]', '3'], 'output': '[4, 4, 4]'}]	['[a1 -> a1] -> a1 -> [a1]', '[Int -> Int] -> Int -> [Int]', '(Num a1) => [a1 -> a1] -> a1 -> [a1]', '(Ord a1) => [a1 -> a1] -> a1 -> [a1]', '(Eq a1) => [a1 -> a1] -> a1 -> [a1]', '[a1 -> a1] -> a2 -> [a2]', '[a1 -> a2] -> a1 -> [a1]', '[a1 -> a2] -> a1 -> [a2]', '[a1 -> a2] -> a2 -> [a2]', '[Int -> Int] -> a1 -> [a1]']
[{'inputs': ['0', '[Nothing, Just 1]'], 'output': '1'}, {'inputs': ['0', '[Nothing]'], 'output': '0'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
[{'inputs': ['0', '[]'], 'output': '0'}, {'inputs': ['0', '[Nothing, Just 1]'], 'output': '1'}, {'inputs': ['0', '[Nothing]'], 'output': '0'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
"[{'inputs': ['2', '""abc""'], 'output': '""c""'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
"[{'inputs': ['""xs""', '""ys""'], 'output': '""xyss""'}]"	['[a1] -> [a1] -> [a1]', 'a1 -> a1 -> a1', '[Char] -> [Char] -> [Char]', '(Ord a1) => [a1] -> [a1] -> [a1]', '(Eq a1) => [a1] -> [a1] -> [a1]', '(Ord a1) => a1 -> a1 -> a1', '(Eq a1) => a1 -> a1 -> a1', '[a1] -> [a2] -> [a1]', '[a1] -> [a2] -> [a2]', '[a1] -> b1 -> b1']
"[{'inputs': ['3', '""x""'], 'output': '""x""'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
[{'inputs': ['[\\x -> x +2, \\x -> x * 2]', '5'], 'output': '[7,10]'}]	['[a1 -> a1] -> a1 -> [a1]', '[Int -> Int] -> Int -> [Int]', '(Num a1) => [a1 -> a1] -> a1 -> [a1]', '(Ord a1) => [a1 -> a1] -> a1 -> [a1]', '(Eq a1) => [a1 -> a1] -> a1 -> [a1]', '[a1 -> a1] -> a2 -> [a2]', '[a1 -> a2] -> a1 -> [a1]', '[a1 -> a2] -> a1 -> [a2]', '[a1 -> a2] -> a2 -> [a2]', '[Int -> Int] -> a1 -> [a1]']
"[{'inputs': ['2', '[""ha"",""ha""]'], 'output': '[""ha"",""ha"",""ha"",""ha""]'}]"	['Int -> [[a1]] -> [[a1]]', 'Int -> [a1] -> [a1]', 'Int -> [[Char]] -> [[Char]]', '(Eq a1) => a1 -> [[b1]] -> [[b1]]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> [[b1]] -> [[b1]]', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => Int -> [[a1]] -> [[a1]]', '(Eq a1) => Int -> [[a1]] -> [[a1]]', '(Ord a1) => Int -> [a1] -> [a1]']
"[{'inputs': ['""aabccc""'], 'output': '""abc""'}, {'inputs': ['""bbc""'], 'output': '""bc""'}, {'inputs': ['""abc""'], 'output': '""abc""'}]"	['[a1] -> [a1]', 'a1 -> a1', '[Char] -> [Char]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '(Ord a1) => a1 -> a1', '(Eq a1) => a1 -> a1', '[a1] -> [Char]', '(Ord a1) => [a1] -> [Char]', '(Eq a1) => [a1] -> [Char]']
"[{'inputs': ['""aabaa""'], 'output': '""aba""'}, {'inputs': ['""aabccc""'], 'output': '""abc""'}, {'inputs': ['""bbc""'], 'output': '""bc""'}, {'inputs': ['""abc""'], 'output': '""abc""'}]"	['[a1] -> [a1]', 'a1 -> a1', '[Char] -> [Char]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '(Ord a1) => a1 -> a1', '(Eq a1) => a1 -> a1', '[a1] -> [Char]', '(Ord a1) => [a1] -> [Char]', '(Eq a1) => [a1] -> [Char]']
"[{'inputs': ['""aaabbcc""'], 'output': '""abc""'}]"	['[a1] -> [a1]', 'a1 -> a1', '[Char] -> [Char]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '(Ord a1) => a1 -> a1', '(Eq a1) => a1 -> a1', '[a1] -> [Char]', '(Ord a1) => [a1] -> [Char]', '(Eq a1) => [a1] -> [Char]']
[{'inputs': ['[(+ 2), (* 3)]', '5'], 'output': '[7, 15]'}]	['[a1 -> a1] -> a1 -> [a1]', '[Int -> Int] -> Int -> [Int]', '(Num a1) => [a1 -> a1] -> a1 -> [a1]', '(Ord a1) => [a1 -> a1] -> a1 -> [a1]', '(Eq a1) => [a1 -> a1] -> a1 -> [a1]', '[a1 -> a1] -> a2 -> [a2]', '[a1 -> a2] -> a1 -> [a1]', '[a1 -> a2] -> a1 -> [a2]', '[a1 -> a2] -> a2 -> [a2]', '[Int -> Int] -> a1 -> [a1]']
[{'inputs': ['0', '[0,0]'], 'output': '[]'}]	['a1 -> [a1] -> [a1]', '(Num a1) => a1 -> [a1] -> [a1]', '(Ord a1) => a1 -> [a1] -> [a1]', '(Eq a1) => a1 -> [a1] -> [a1]', 'a1 -> [a2] -> [a1]', 'Int -> [a1] -> [a1]', 'a1 -> [Int] -> [a1]', '(Num a1, Ord a1) => a1 -> [a1] -> [a1]', '(Eq a1, Num a1) => a1 -> [a1] -> [a1]', '(Num a2) => a1 -> [a2] -> [a1]']
"[{'inputs': ['2', '""ab""'], 'output': '""abab""'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
"[{'inputs': ['dedupe ', '""aaabbab""'], 'output': '""abab""'}]"	"Variable not in scope: dedupe

"
"[{'inputs': ['""aaabbab"" '], 'output': '""abab""'}]"	['[a1] -> [a1]', 'a1 -> a1', '[Char] -> [Char]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '(Ord a1) => a1 -> a1', '(Eq a1) => a1 -> a1', '[a1] -> [Char]', '(Ord a1) => [a1] -> [Char]', '(Eq a1) => [a1] -> [Char]']
[{'inputs': ['[(a->a*a),(a->1)]', '2'], 'output': '[4, 1]'}]	"Pattern syntax in expression context: a -> a * a
Pattern syntax in expression context: a -> 1

"
"[{'inputs': ['[(\\a->""hi""),(\\a->""!"")]', '1'], 'output': '[""hi"", ""!""]'}, {'inputs': ['[(\\a->a),(\\a->1)]', '2'], 'output': '[2, 1]'}]"	['[a1 -> t0] -> a1 -> [t0]', '[Int -> t0] -> Int -> [t0]', '(Eq t0) => [a1 -> t0] -> a1 -> [t0]', '(Ord t0) => [a1 -> t0] -> a1 -> [t0]', '(Num a1) => [a1 -> t0] -> a1 -> [t0]', '(Ord a1) => [a1 -> t0] -> a1 -> [t0]', '(Eq a1) => [a1 -> t0] -> a1 -> [t0]', '(Eq t0) => [Int -> t0] -> Int -> [t0]', '(Ord t0) => [Int -> t0] -> Int -> [t0]', '[a1 -> t0] -> Int -> [t0]']
"[{'inputs': ['[(\\a->a*10),(\\a->a+5)]', '3'], 'output': '[30, 8]'}, {'inputs': ['[(\\a->""hi""),(\\a->""!"")]', '1'], 'output': '[""hi"", ""!""]'}, {'inputs': ['[(\\a->a),(\\a->1)]', '2'], 'output': '[2, 1]'}]"	['[a1 -> t1] -> a1 -> [t1]', '[Int -> t1] -> Int -> [t1]', '(Eq t1) => [a1 -> t1] -> a1 -> [t1]', '(Ord t1) => [a1 -> t1] -> a1 -> [t1]', '(Num a1) => [a1 -> t1] -> a1 -> [t1]', '(Ord a1) => [a1 -> t1] -> a1 -> [t1]', '(Eq a1) => [a1 -> t1] -> a1 -> [t1]', '(Eq t1) => [Int -> t1] -> Int -> [t1]', '(Ord t1) => [Int -> t1] -> Int -> [t1]', '[a1 -> t1] -> Int -> [t1]']
[{'inputs': ['[(\\x -> x + 2), (\\x -> x * 2)]', '5'], 'output': '[7, 10]'}]	['[a1 -> a1] -> a1 -> [a1]', '[Int -> Int] -> Int -> [Int]', '(Num a1) => [a1 -> a1] -> a1 -> [a1]', '(Ord a1) => [a1 -> a1] -> a1 -> [a1]', '(Eq a1) => [a1 -> a1] -> a1 -> [a1]', '[a1 -> a1] -> a2 -> [a2]', '[a1 -> a2] -> a1 -> [a1]', '[a1 -> a2] -> a1 -> [a2]', '[a1 -> a2] -> a2 -> [a2]', '[Int -> Int] -> a1 -> [a1]']
"[{'inputs': ['4', '""abc""'], 'output': '[]'}]"	['a1 -> [b1] -> [a1]', 'Int -> [a1] -> [a1]', 'Int -> a1 -> [a1]', 'a1 -> [Char] -> [a1]', '(Ord b1) => a1 -> [b1] -> [a1]', '(Eq b1) => a1 -> [b1] -> [a1]', '(Ord b1) => a1 -> b1 -> [a1]', '(Eq b1) => a1 -> b1 -> [a1]', '(Eq a1) => a1 -> [b1] -> [a1]', '(Eq a1) => a1 -> [b1] -> [b1]']
[{'inputs': ['0', '[Just (-1),Nothing]'], 'output': '-1'}, {'inputs': ['0', '[Nothing]'], 'output': '0'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
[{'inputs': ['0', '[Nothing, Nothing, Just 2]'], 'output': '2'}, {'inputs': ['0', '[Just (-1),Nothing]'], 'output': '-1'}, {'inputs': ['0', '[Nothing]'], 'output': '0'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
"[{'inputs': ['3', '""a""'], 'output': '""aaa""'}, {'inputs': ['2', '""abc""'], 'output': '""abcabc""'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
"[{'inputs': ['""aaabbba""'], 'output': '""aba""'}]"	['[a1] -> [a1]', 'a1 -> a1', '[Char] -> [Char]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '(Ord a1) => a1 -> a1', '(Eq a1) => a1 -> a1', '[a1] -> [Char]', '(Ord a1) => [a1] -> [Char]', '(Eq a1) => [a1] -> [Char]']
"[{'inputs': ['""abc""'], 'output': '""abc""'}, {'inputs': ['""aabb""'], 'output': '""ab""'}]"	['[a1] -> [a1]', 'a1 -> a1', '[Char] -> [Char]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '(Ord a1) => a1 -> a1', '(Eq a1) => a1 -> a1', '[a1] -> [Char]', '(Ord a1) => [a1] -> [Char]', '(Eq a1) => [a1] -> [Char]']
[{'inputs': ['[(\\x -> x + 2), (\\x -> x * 2)] 5', '5'], 'output': '[7,10]'}]	"Couldn't match expected type Ã¢Â€Â˜Integer -> aÃ¢Â€Â™
            with actual type Ã¢Â€Â˜[Integer -> Integer]Ã¢Â€Â™

"
[{'inputs': ['[(\\x -> x + 2), (\\x -> x * 2)]', '5'], 'output': '[7,10]'}]	['[a1 -> a1] -> a1 -> [a1]', '[Int -> Int] -> Int -> [Int]', '(Num a1) => [a1 -> a1] -> a1 -> [a1]', '(Ord a1) => [a1 -> a1] -> a1 -> [a1]', '(Eq a1) => [a1 -> a1] -> a1 -> [a1]', '[a1 -> a1] -> a2 -> [a2]', '[a1 -> a2] -> a1 -> [a1]', '[a1 -> a2] -> a1 -> [a2]', '[a1 -> a2] -> a2 -> [a2]', '[Int -> Int] -> a1 -> [a1]']
"[{'inputs': ['1', '""xx""'], 'output': '""xx""'}, {'inputs': ['0', '[]'], 'output': '[]'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
[{'inputs': ['1'], 'output': '2'}]	['a1 -> a1', 'Int -> Int', '(Num a1) => a1 -> a1', '(Ord a1) => a1 -> a1', '(Eq a1) => a1 -> a1', '(Num a1, Ord a1) => a1 -> a1', '(Eq a1, Num a1) => a1 -> a1', '(Ord a1) => a1 -> Int', '(Eq a1) => a1 -> Int', '(Num a1, Ord a1) => a1 -> Int']
[{'inputs': ['[\\x->x+1,\\x->x+2]', '4'], 'output': '[5,6]'}]	['[a1 -> a1] -> a1 -> [a1]', '[Int -> Int] -> Int -> [Int]', '(Num a1) => [a1 -> a1] -> a1 -> [a1]', '(Ord a1) => [a1 -> a1] -> a1 -> [a1]', '(Eq a1) => [a1 -> a1] -> a1 -> [a1]', '[a1 -> a1] -> a2 -> [a2]', '[a1 -> a2] -> a1 -> [a1]', '[a1 -> a2] -> a1 -> [a2]', '[a1 -> a2] -> a2 -> [a2]', '[Int -> Int] -> a1 -> [a1]']
"[{'inputs': ['2', '""abc""'], 'output': '""abcabc""'}, {'inputs': ['2', '[1]'], 'output': '[1,1]'}]"	['Int -> [t0] -> [t0]', '(Ord a1) => a1 -> [t0] -> [t0]', '(Eq a1) => a1 -> [t0] -> [t0]', '(Eq t0) => Int -> [t0] -> [t0]', '(Ord t0) => Int -> [t0] -> [t0]', '(Ord a1, Eq t0) => a1 -> [t0] -> [t0]', '(Ord a1, Ord t0) => a1 -> [t0] -> [t0]', '(Num a1, Ord a1) => a1 -> [t0] -> [t0]', '(Eq a1, Eq t0) => a1 -> [t0] -> [t0]', '(Eq a1, Ord t0) => a1 -> [t0] -> [t0]']
"[{'inputs': ['2', '""abc""'], 'output': '""abcabc""'}, {'inputs': ['0', '[]'], 'output': '[]'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
[{'inputs': ['[1,2,2,3]'], 'output': '[1,2,3]'}, {'inputs': ['[1,2,2]'], 'output': '[1,2]'}, {'inputs': ['[1,1]'], 'output': '[1]'}]	['[a1] -> [a1]', '[Int] -> [Int]', '(Num a1) => [a1] -> [a1]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '[a1] -> [Int]', '(Num a1, Ord a1) => [a1] -> [a1]', '(Eq a1, Num a1) => [a1] -> [a1]', '(Num a1) => [a1] -> [Int]', '(Ord a1) => [a1] -> [Int]']
[{'inputs': ['[1,1,2]'], 'output': '[1,2]'}, {'inputs': ['[2,2]'], 'output': '[2]'}, {'inputs': ['[]'], 'output': '[]'}, {'inputs': ['[1,1]'], 'output': '[1]'}]	['[a1] -> [a1]', '[Int] -> [Int]', '(Num a1) => [a1] -> [a1]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '[a1] -> [Int]', '(Num a1, Ord a1) => [a1] -> [a1]', '(Eq a1, Num a1) => [a1] -> [a1]', '(Num a1) => [a1] -> [Int]', '(Ord a1) => [a1] -> [Int]']
[{'inputs': ['[(+1), (+2)]', '2'], 'output': '[3,4]'}]	['[a1 -> a1] -> a1 -> [a1]', '[Int -> Int] -> Int -> [Int]', '(Num a1) => [a1 -> a1] -> a1 -> [a1]', '(Ord a1) => [a1 -> a1] -> a1 -> [a1]', '(Eq a1) => [a1 -> a1] -> a1 -> [a1]', '[a1 -> a1] -> a2 -> [a2]', '[a1 -> a2] -> a1 -> [a1]', '[a1 -> a2] -> a1 -> [a2]', '[a1 -> a2] -> a2 -> [a2]', '[Int -> Int] -> a1 -> [a1]']
[{'inputs': [], 'output': '2'}]	['Int']
"[{'inputs': ['""book""'], 'output': '1'}, {'inputs': ['""aabbcde""'], 'output': '2'}]"	['[a1] -> Int', '[Char] -> Int', '(Eq a1) => [a1] -> Int', '(Ord a1) => [a1] -> Int', '(Eq a1) => a1 -> Int', '(Ord a1) => a1 -> Int']
"[{'inputs': ['""vscode""'], 'output': '0'}, {'inputs': ['""book""'], 'output': '1'}, {'inputs': ['""aabbcde""'], 'output': '2'}]"	['[a1] -> Int', '[Char] -> Int', '(Eq a1) => [a1] -> Int', '(Ord a1) => [a1] -> Int', '(Eq a1) => a1 -> Int', '(Ord a1) => a1 -> Int']
"[{'inputs': ['""abba""'], 'output': 'True'}]"	['[a1] -> Bool', '[Char] -> Bool', '(Eq a1) => [a1] -> Bool', '(Ord a1) => [a1] -> Bool', '(Eq a1) => a1 -> Bool', '(Ord a1) => a1 -> Bool']
"[{'inputs': ['""aabb""'], 'output': 'False'}, {'inputs': ['""abba""'], 'output': 'True'}]"	['[a1] -> Bool', '[Char] -> Bool', '(Eq a1) => [a1] -> Bool', '(Ord a1) => [a1] -> Bool', '(Eq a1) => a1 -> Bool', '(Ord a1) => a1 -> Bool']
"[{'inputs': ['""Nadia Polikarpova""'], 'output': '""N.P""'}, {'inputs': ['""Kasra Ferdowsi Fard""'], 'output': '""K.F.F""'}]"	['[a1] -> [a1]', 'a1 -> a1', '[Char] -> [Char]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '(Ord a1) => a1 -> a1', '(Eq a1) => a1 -> a1', '[a1] -> [Char]', '(Ord a1) => [a1] -> [Char]', '(Eq a1) => [a1] -> [Char]']
[{'inputs': ['0', '[Nothing, Just 3, Just 4]'], 'output': '3'}, {'inputs': ['0', '[Nothing, Nothing]'], 'output': '0'}, {'inputs': ['0', '[Nothing, Just 1]'], 'output': '1'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
[{'inputs': ['1', '[Just 5, Nothing]'], 'output': '5'}, {'inputs': ['0', '[Nothing, Just 3, Just 4]'], 'output': '3'}, {'inputs': ['0', '[Nothing, Nothing]'], 'output': '0'}, {'inputs': ['0', '[Nothing, Just 1]'], 'output': '1'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
"[{'inputs': ['(\\x -> x ++ x)', '3', '""f-'], 'output': '""f-f-f-f-f-f-f-f-""'}]"	"lexical error in string/character literal at end of input

"
[{'inputs': ['(\\x -> x + 1)', '3', '0'], 'output': '3'}]	['(a1 -> a1) -> a1 -> a1 -> a1', '(Int -> Int) -> Int -> Int -> Int', '(Num a1) => (a1 -> a1) -> a1 -> a1 -> a1', '(Ord a1) => (a1 -> a1) -> a1 -> a1 -> a1', '(Eq a1) => (a1 -> a1) -> a1 -> a1 -> a1', '(a1 -> a2) -> a1 -> a1 -> a2', '(a1 -> a2) -> a1 -> a2 -> a2', '(Int -> Int) -> Int -> a1 -> a1', '(Int -> Int) -> a1 -> a1 -> a1', '(Int -> a1) -> Int -> Int -> a1']
"[{'inputs': ['(\\x -> """")', '3', '0'], 'output': '3'}]"	['(b1 -> [a1]) -> b1 -> b1 -> b1', '(a1 -> [Char]) -> a1 -> a1 -> a1', '(a1 -> [a1]) -> a1 -> a1 -> a1', '(a1 -> a1) -> a1 -> a1 -> a1', '(Num b1) => (b1 -> [a1]) -> b1 -> b1 -> b1', '(Ord b1) => (b1 -> [a1]) -> b1 -> b1 -> b1', '(Eq b1) => (b1 -> [a1]) -> b1 -> b1 -> b1', '(Eq a1) => (b1 -> [a1]) -> b1 -> b1 -> b1', '(Eq a1) => (a1 -> [a1]) -> b1 -> b1 -> b1', '(Ord a1) => (b1 -> [a1]) -> b1 -> b1 -> b1']
[{'inputs': ['(\\x -> 0.01)', '3', '0'], 'output': '3'}]	['(a1 -> Double) -> a1 -> a1 -> a1', '(a1 -> a1) -> a1 -> a1 -> a1', '(Eq a1) => (b1 -> a1) -> b1 -> b1 -> b1', '(Eq a1) => (a1 -> a1) -> b1 -> b1 -> b1', '(Ord a1) => (b1 -> a1) -> b1 -> b1 -> b1', '(Ord a1) => (a1 -> a1) -> b1 -> b1 -> b1', '(Num a1) => (a1 -> Double) -> a1 -> a1 -> a1', '(Ord a1) => (a1 -> Double) -> a1 -> a1 -> a1', '(Eq a1) => (a1 -> Double) -> a1 -> a1 -> a1', '(Num a1) => (a1 -> a1) -> a1 -> a1 -> a1']
[{'inputs': ['0', '[Nothing, Just 1]'], 'output': '1'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
[{'inputs': ['(a -> b)', 'Num', 'a'], 'output': '[b]'}]	"Pattern syntax in expression context: a -> b

"
"[{'inputs': ['(\\x -> x ++ x)', '3', '""f-""'], 'output': '""f-f-f-f-f-f-f-f-""'}]"	['([a1] -> [a1]) -> a1 -> [b1] -> [b1]', '([a1] -> [a1]) -> a1 -> b1 -> b1', '([a1] -> [a1]) -> Int -> [a1] -> [a1]', '([a1] -> [a1]) -> Int -> a1 -> a1', '([a1] -> [a1]) -> a1 -> [a1] -> [a1]', '([a1] -> [a1]) -> a1 -> a1 -> a1', '([a1] -> [a1]) -> a1 -> [Char] -> [Char]', '(Ord b1) => ([a1] -> [a1]) -> a1 -> [b1] -> [b1]', '(Eq b1) => ([a1] -> [a1]) -> a1 -> [b1] -> [b1]', '(Ord b1) => ([a1] -> [a1]) -> a1 -> b1 -> b1']
"[{'inputs': ['2', '""abc""'], 'output': '""abcabc""'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
"[{'inputs': ['3', '""""'], 'output': '""""'}, {'inputs': ['2', '""abc""'], 'output': '""abcabc""'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
"[{'inputs': ['0', '""a""'], 'output': '""a""'}, {'inputs': ['3', '""""'], 'output': '""""'}, {'inputs': ['2', '""abc""'], 'output': '""abcabc""'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
[{'inputs': ['0', '[Nothing, Just 1, Just 2]'], 'output': '1'}]	['a1 -> [Maybe a1] -> a1', 'Int -> [Maybe Int] -> Int', '(Num a1) => a1 -> [Maybe a1] -> a1', '(Ord a1) => a1 -> [Maybe a1] -> a1', '(Eq a1) => a1 -> [Maybe a1] -> a1', 'a1 -> [Maybe a2] -> a1', 'Int -> [Maybe a1] -> Int', 'Int -> [Maybe a1] -> a1', 'a1 -> [Maybe Int] -> a1', '(Num a1, Ord a1) => a1 -> [Maybe a1] -> a1']
"[{'inputs': ['3', '""abc""'], 'output': '""abcabcabc""'}]"	['Int -> [a1] -> [a1]', 'Int -> a1 -> a1', 'Int -> [Char] -> [Char]', '(Eq a1) => a1 -> [b1] -> [b1]', '(Eq a1) => a1 -> b1 -> b1', '(Ord a1) => a1 -> [b1] -> [b1]', '(Ord a1) => a1 -> b1 -> b1', '(Ord a1) => Int -> [a1] -> [a1]', '(Eq a1) => Int -> [a1] -> [a1]', '(Ord a1) => Int -> a1 -> a1']
"[{'inputs': ['""aaabbab""'], 'output': '""abab""'}]"	['[a1] -> [a1]', 'a1 -> a1', '[Char] -> [Char]', '(Ord a1) => [a1] -> [a1]', '(Eq a1) => [a1] -> [a1]', '(Ord a1) => a1 -> a1', '(Eq a1) => a1 -> a1', '[a1] -> [Char]', '(Ord a1) => [a1] -> [Char]', '(Eq a1) => [a1] -> [Char]']
[{'inputs': ['[(\\x -> x + 2), (\\x -> x * 2)]'], 'output': ' [7, 10]'}]	['[a1 -> a1] -> [a1]', '[Int -> Int] -> [Int]', '(Num a1) => [a1 -> a1] -> [a1]', '(Ord a1) => [a1 -> a1] -> [a1]', '(Eq a1) => [a1 -> a1] -> [a1]', '[a1 -> a2] -> [a1]', '[a1 -> a2] -> [a2]', '[Int -> a1] -> [Int]', '[Int -> a1] -> [a1]', '[a1 -> Int] -> [Int]']
[{'inputs': ['[(\\x -> x + 2), (\\x -> x * 2)]', '5'], 'output': ' [7, 10]'}]	['[a1 -> a1] -> a1 -> [a1]', '[Int -> Int] -> Int -> [Int]', '(Num a1) => [a1 -> a1] -> a1 -> [a1]', '(Ord a1) => [a1 -> a1] -> a1 -> [a1]', '(Eq a1) => [a1 -> a1] -> a1 -> [a1]', '[a1 -> a1] -> a2 -> [a2]', '[a1 -> a2] -> a1 -> [a1]', '[a1 -> a2] -> a1 -> [a2]', '[a1 -> a2] -> a2 -> [a2]', '[Int -> Int] -> a1 -> [a1]']
