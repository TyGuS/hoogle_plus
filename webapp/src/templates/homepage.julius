hljs.initHighlightingOnLoad();
$("#loading").hide();

function bin2String(array) {
  var result = "";
  for (var i = 0; i < array.length; i++) {
    result += String.fromCharCode(parseInt(array[i], 2));
  }
  return result;
}

function parseJson(str) {
  var rxp = /{[^}]+}/g
  var curMatch, found = []
  while( curMatch = rxp.exec( str ) ) {
    found.push(JSON.parse(curMatch[0]));
  }
  return found
}

function generateUUID() { // Public Domain/MIT
    var d = new Date().getTime();
    if (typeof performance !== 'undefined' && typeof performance.now === 'function'){
        d += performance.now(); //use high-precision timer if available
    }
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = (d + Math.random() * 16) % 16 | 0;
        d = Math.floor(d / 16);
        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);
    });
}

$(function(){
    $('[data-toggle="tooltip"]').tooltip()

    var curr_uuid;

    $(document).bind("ajaxSend", function(event, jqxhr, settings){
      if ( settings.url == window.location + "/search" ) {
        $("#result").empty()
        $("#loading").show()
        $("#demo").hide()
      } else {
        $('#loading').hide()
        $('#demo').show()
      }
    });

    // $(document).on("click", "#home", function(){
    //     location.reload();
    // });

    $(document).on("click", ".sample", function(){
      var val = $(this).children('code')[0].innerText
      console.log(val)
      $("#signature").val(val)
      $("#button-stop").click()
      $("#theForm").submit()
    })

    $("#button-stop").attr('disabled','disabled')
    $(document).on("click", "#button-stop", function(){
        var my_uuid = curr_uuid
        $.ajax({
               contentType: "application/json",
               dataType: "text",
               type: "POST",
               url: window.location + "/stop",
               data: JSON.stringify({
                                    query_uuid: curr_uuid,
                                    typeSignature: $("#signature").val()
                                }),
              success: function(res) {
                  console.log(res)
                  if(my_uuid == curr_uuid){
                    $('#loading').hide()
                  }
               },
               error: function(xhr, ajaxOptions, thrownError) {
                  console.log(thrownError)
               }
        });
    });

    $("#signature").keyup(function() {
        if (!this.value) {
            $("#demo").show()
        }
    });

    $("#theForm").submit(function(e) {

        e.preventDefault(); // avoid to execute the actual submit of the form.

        var form = $(this);
        var url = form.attr('action');
        var last_response_len = false;
        var idx = 0;
        var result_div = $("#result")
        result_div.addClass("list-group")
                  .addClass("list-group-flush")
        $("#button-addon2").attr('disabled','disabled')
        $("#button-stop").removeAttr('disabled')
        curr_uuid = generateUUID()
        $.ajax({
               contentType: "application/json",
               type: "POST",
               url: window.location + "/search",
               data: JSON.stringify({
                                    query_uuid: curr_uuid,
                                    typeSignature: $("#signature").val()
                                }),
               xhrFields: {
                    onprogress: function(e)
                    {
                        var this_response, response = e.currentTarget.response;
                        if(last_response_len === false) {
                            result_div.empty()
                            idx = 0
                            this_response = parseJson(response);
                            $("#signature").val(this_response[0]["query"])
                            curr_uuid = this_response[0]["result_uuid"]
                            last_response_len = response.length;
                        } else {
                            this_response = parseJson(response.substring(last_response_len));
                            last_response_len = response.length;
                        }

                        for (var k in this_response) {
                          idx = idx + 1
                          var data = this_response[k]
                          if(data === undefined) {
                              result_div.append("No result found");
                          } else {
                              // check whether uuid matches
                              if(data["result_uuid"] != curr_uuid)
                                return; // skip unmatched results
                              $("#loading").show()
                              $("#button-stop").removeAttr('disabled')
                              $("#button-addon2").attr('disabled','disabled')
                              var badge = $("<span></span>")
                                          .addClass("badge")
                                          .addClass("badge-primary")
                                          .append(idx)
                              var sol_div = $("<div></div>")
                                           .addClass("d-flex")
                                           .addClass("flex-row")
                                           .addClass("list-group-item")
                                           .append($("<div></div>")
                                                   .addClass("left")
                                                   .append(badge))
                              var right_div = $("<div></div>")
                                             .append($("<h5></h5>")
                                                     .append($("<span></span>")
                                                             .append(data["solution"])))
                              var pkg_div = $("<span></span>")
                                           .addClass("packages")
                              if(data["packages"].length != 0)
                                pkg_div.append("Modules: ")
                              var packages = Object.values(data["packages"]).join(', ')
                              pkg_div.append(packages)
                              right_div.append(pkg_div)
                              sol_div.append(right_div)
                              result_div.append(sol_div)
                              $('[data-toggle="tooltip"]').tooltip()
                          }
                        }
                        // flush()
                        // console.log(this_response);
                    }
                },
               success: function(res)
               {
                  var data = parseJson(res)
                  // console.log(data)
                  if(data === undefined || data.length == 0 || data[0]["result_uuid"] == curr_uuid){
                    $("#loading").hide()
                    $("#button-addon2").removeAttr('disabled');
                    $("#button-stop").attr('disabled','disabled')
                    // $('#demo').show()
                  }
                  if(data.length == 0)
                    result_div.append("No result found")
               },
               error: function (xhr, ajaxOptions, thrownError) {
                  $("#loading").hide()
                  $("#button-addon2").removeAttr('disabled')
                  $("#button-stop").attr('disabled','disabled')
                  // $('#demo').show()
                  // result_div.append("Search timeout")
                  console.log(xhr.response);
                  console.log(thrownError);
               },
               dataType: "text"
             });


    });
});
