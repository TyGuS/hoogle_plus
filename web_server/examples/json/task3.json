[{"candidate": "\\f xs -> f (GHC.List.head xs)", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.head: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 1"}]}, {"candidate": "\\f xs -> f (GHC.List.last xs)", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.last: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 2"}]}, {"candidate": "\\f xs -> f (GHC.List.head (GHC.List.init xs))", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.init: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 1"}]}, {"candidate": "\\f xs -> f (GHC.List.last (GHC.List.init xs))", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.init: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 1"}]}, {"candidate": "\\f xs -> f (GHC.List.head (GHC.List.tail xs))", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.tail: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 2"}]}, {"candidate": "\\f xs -> f (GHC.List.last (GHC.List.tail xs))", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.tail: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 2"}]}, {"candidate": "\\f xs -> f (Data.Maybe.fromJust (Data.Maybe.listToMaybe xs))", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Maybe.fromJust: Nothing"}, {"inputs": ["Just", "[1,2]"], "output": "Just 1"}]}, {"candidate": "\\f xs -> Data.Maybe.fromMaybe (f (GHC.List.head xs)) Data.Maybe.Nothing", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.head: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 1"}]}, {"candidate": "\\f xs -> Data.Maybe.fromMaybe (f (GHC.List.last xs)) Data.Maybe.Nothing", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.last: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 2"}]}, {"candidate": "\\f xs -> f (Data.Maybe.fromJust (Data.Maybe.Just (GHC.List.head xs)))", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.head: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 1"}]}]