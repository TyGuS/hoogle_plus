[{"candidate": "\\arg0 arg1 -> arg0 (GHC.List.head arg1)", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.head: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 1"}]}, {"candidate": "\\arg0 arg1 -> arg0 (GHC.List.last arg1)", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.last: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 2"}]}, {"candidate": "\\arg0 arg1 -> arg0 (GHC.List.head (GHC.List.init arg1))", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.init: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 1"}]}, {"candidate": "\\arg0 arg1 -> arg0 (GHC.List.last (GHC.List.init arg1))", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.init: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 1"}]}, {"candidate": "\\arg0 arg1 -> arg0 (GHC.List.head (GHC.List.tail arg1))", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.tail: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 2"}]}, {"candidate": "\\arg0 arg1 -> arg0 (GHC.List.last (GHC.List.tail arg1))", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.tail: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 2"}]}, {"candidate": "\\arg0 arg1 -> arg0 (Data.Maybe.fromJust (Data.Maybe.listToMaybe arg1))", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Maybe.fromJust: Nothing"}, {"inputs": ["Just", "[1,2]"], "output": "Just 1"}]}, {"candidate": "\\arg0 arg1 -> Data.Maybe.fromMaybe (arg0 (GHC.List.head arg1)) Data.Maybe.Nothing", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.head: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 1"}]}, {"candidate": "\\arg0 arg1 -> Data.Maybe.fromMaybe (arg0 (GHC.List.last arg1)) Data.Maybe.Nothing", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.last: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 2"}]}, {"candidate": "\\arg0 arg1 -> arg0 (Data.Maybe.fromJust (Data.Maybe.Just (GHC.List.head arg1)))", "examples": [{"inputs": ["\\_ -> Nothing", "[]"], "output": "Nothing"}, {"inputs": ["Just", "[]"], "output": "Prelude.head: empty list"}, {"inputs": ["Just", "[1,2]"], "output": "Just 1"}]}]